Okay, here's the transcript of the video:

[00:00] Today, we're going to be using Cursor to build an app without writing a single line of code, like normal. And the app that you're going to watch me build today, and you can follow along starting with the template that, as always, I put in the description. This app is surrounding RSS feeds and a new way to find really good content on the internet using AI. I'm very passionate about podcasts, and even though I have over a million followers on short-form platforms, I don't ever have them downloaded on my phone because I think they destroy your brain. I don't get high on my own supply. And
[00:34] I want to find a new way to find gold mines, really good content creators, passionate content creators. And I think the best place for that is Twitter, first of all, greatest place to learn about AI if you don't know that already, you're missing out. Uh, podcasts and YouTube videos. And so we're starting out in this episode with podcasts. A new way to use AI to search through a ton of podcast content. And so I saw this guy, Peter Zakin, he tweeted this. He said, I do believe there is a venture scale opportunity whose entry point product looks a lot like an RSS reader.
[01:11] And then there was Carmen, who I follow on Twitter, said, "RSS feeds are so underrated. There's a whole internet out there you won't find with search engines or social media." And a few nights ago, I read this and I'm like, you know what? I'm going to try and build an app using RSS feeds. I want to use AI to search through this content. And I ended up building a tool that I'm pretty proud of.
[01:35] And then we have the Joe Rogan Experience podcast. I can click on the Theo Vonn episode. And now we can transcribe it.
[01:45] You know what? That's a funny part. Save to note. And we have this section right here. Now what we can say is, please fully describe the top five funniest parts of this episode. And we're going to use the new 03 model right here, and it is going to respond to us.
[02:05] And not only is it going to respond, but it's going to give us playable segments. The weighted blanket for dogs dilemma. So we can say, we can click on this.
[02:13] Do they have a weighted blanket or not for him?
[02:15] Here is going ham on stage.
[02:18] I saw a video of Angus on stage the other night, like, recently. He's like 70 years old from ACDC, going ham. Old fucking dude, white hair.
[02:25] Who sings that? How dare you? How dare you say who sings that? No.
[02:29] And I created that without writing a single line of code. And it made me really realize how powerful these tools are. I don't know if it's going to shine through. I think it's going to be like a 30 to 40 minute video and I was just blown away. There was like three moments while making this app where I was like, "Oh my god, I can't believe AI is getting this good at coding." And yeah, didn't write a single line of code. Still have never written a line of code. I also want to take this moment to say for those of you who are on this ride with me and following me on Twitter and YouTube recently, um, it's been so much fun. And so I'm going to keep doing this. I don't stop. I'm going to go until I can build whatever the whatever I want. I'm just going to keep going. Um, much love. I really appreciate those of you who've supported me. And let's just dive in to the video.
[03:17] Without writing a single line of code, today I'm going to build an RSS powered super app. We're going to use Cursor to generate the code. We're going to use Perplexity to learn about it.
[03:28] (On-screen text shows a document titled "RSS App Development Plan and Ideas" with a prompt being typed: "Please tell me what an RSS feed is, what type of content has them.")
[03:37] RSS feeds is a web feed format that allows users to access updates to online content, standardized, automated way. Essentially enables users to subscribe to their favorite websites, blogs or other content sources.
[03:49] Interesting.
[03:50] So we downloaded this app NetNewsWire and I found this other site right here. This Castos tool right here, and I could type in Tim Dillon, who's my favorite comedian. I can copy this link to the Tim Dillon show.
[04:05] Back to NetNewsWire and we can paste in, we can go new feed, paste this in, add. Finding feed. Tim Dillon Show. All of the episodes right here. Some of them have the transcript, some of them do not have the transcript. So the app we're going to build is going to get the transcript for all of them.
[04:27] So, let's just focus only on podcasts to start out.
[04:30] I think we can clone this pretty quickly because I don't need a lot of these features actually. So, here's what we're going to do. First thing we're going to do is we're going to open up Cursor. And let's go ahead and run this. We're going to create a new folder and call this RSS app. Create. Select as repository destination. Would you like to open the cloned repository? Open.
[04:50] Now what we're going to do is we're going to hit command I and we're going to open up this app right here. We're going to screenshot it. We're going to open up Cursor and we're going to do here, please turn this template that we have so far into an app that looks like this. We are going to build out an RSS reader. For now, I want you to just build the shell of the app without pulling in any data. I want you to create a sidebar and then a view to the right of that which has the name of each individual podcast and just put in a few sample data, and then when you click on that, um, and like make this all placeholder data. You don't need to even make up fake data, just put like one title, one title two, title three, and then description one, description two, description three, make it in a little clean format just like this. Except make the background white. Uh, like basically turn this to light mode and make this please. And on the left side should be the name of the RSS feed, and then add a button at the top that allows me to add an RSS feed. We're going to add this feature in in just a second. So, we're going to make sure this is on agent mode. Ignore the Google Firebase stuff for now, we'll add that in later.
[05:46] And here it's doing some coding.
[05:49] We can full screen this.
[05:51] Can you please run this localhost?
[05:56] Go ahead and accept it.
[05:57] Okay, so now we're going to open it up so we can actually see the what we're doing here.
[06:02] Okay, now we're going to open up our app here.
[06:05] Let's go ahead and throw this on another desktop so we can go back and forth.
[06:11] Here we go. Here is our app. Title one, title two, title three.
[06:16] Can you please add another panel for the description or for the content when I click on a title, it should show the content there in markdown.
[06:32] While that's loading, let's go to Perplexity and say, I created this custom Perplexity, custom spaces. It's called input output. And I basically, it says you so you go in, you put it in this format input output. Um, input RSS feed link. So this is input. Uh, output is going to be. And you don't need to include this. It's built into the system prompt. Output is going to be loads all podcasts and content from that podcast into my app. Next JS project. So we can run this. The system prompt is going to find APIs out there that we can use for this use case. That's what it's doing here, which is pretty cool. And here it is doing thinking, so we can actually see the model thinking. This is the new R1 model. And here we go. To integrate a podcast RSS feed into your Next.js application and dynamically display episodes, okay. Implement this solution fetches podcast episodes from an RSS feed URL. Okay, so do we need to pay for these? What is the best free option? Okay, I like that idea. You just said, give me all the example code I might need to implement. Okay. So, we're going to run this. And then what we're going to do here is we're going to go back to Cursor.
[08:06] And we're going to accept this. Let's see how it did on this right here. Okay, so it added this in. Title one, title two, title three, and it is in markdown. That's good. Okay. So now what I want to do here is I want to paste in this information. Okay. I want to now get rid of all the sample data. I like what you've done. Please allow me to import the most recent, uh, 25, um, pieces of content from a feed when the user adds a link to a podcast or any RSS feed. I want you to pull all the titles and content and make it look good like it does now. Here are some docs. I hope this helps. Paste. Let's go ahead and run this. Let's see what happened here.
[09:24] So we can add a feed. We can add that Tim Dillon feed that we had earlier. Um, I defined, so we can find a feed here. Let's copy this. And we can paste it here. Add feed. Invalid audio, invalid RSS feed. Let's inspect this. We'll go to console. Hmm.
[09:56] Um I've pasted an RSS feed link and I just pasted it into another app and it worked. So why is this not working?
[10:05] I believe Claude will get it on this attempt right here. Even though it doesn't even look promising, we'll see. I've made the following changes. All right, let's go ahead and hit accept.
[10:16] And we're going to hit add feed, paste the feed right here, and add feed. It said Last Week in AI. Oh my god. We did it. It works. Literally works. Look at that. Um, no way. Okay, that's tight. All right, let's paste that in. Okay, please format the content better here. I want this to look better, please. Make this look good and with a lot of padding on each side so it's sleek and has good spacing and headers etc.
[10:55] All right, while that's loading, let's go ahead and figure out. We need to go back to input output. Let's start a new chat with our, uh, custom Perplexity prompt. Um, so the input is going to be, um, RSS feed post like one post from an RSS feed. And I want back the full transcript of the podcast or the full audio of the podcast. Try it again. Um, okay, that worked. We can click on this one. Okay. These descriptions are not in the right format, but that's okay. Ah, there we go. Let's do it. Come on, son. That's what I'm talking about. That's pretty cool.
[11:52] Okay, so now we want to move to the next step. Actually, I think we could, let's go ahead and, let's just do a little bit of cleanup on the formatting, just so we don't go crazy. So, let's just say, can you please add a heading to each column and make the height of each section the same. Align the header row and make it look good.
[12:29] Okay. It's still too blocky, hey. There's too many blocks. Let's keep it simple for now. All of these are aligned. Uh, the all feeds tab doesn't work. Um, we should actually fix that. The all feeds should show all episodes from all organized by date.
[12:57] Okay, there we go. So we actually added our podcast in there, uh, Last Week in AI, Joe Rogan, and all feeds. All right. So now what we need to do is we're going to apply this logic right here. So I asked, um, so here's how to create a Next.js app that processes podcast RSS feeds to display transcripts and audio files. This implementation will parse the RSS feeds looking for podcast namespace standard, extract audio files, retrieve transcripts when available, display audio player and transcript UI. Let's just see what this does.
[13:36] What the hell? Is this it?
[13:38] Joe Rogan podcast. Check it out. Train by Day Joe Rogan podcast by night. All day. Joe Rogan experience.
[13:41] What the hell? What? The Joe Rogan experience.
[13:44] Oh my god. This was just too easy. Okay. Last week in AI.
[13:48] They used two Nvidia GPUs to do this and they had to do a whole bunch of custom.
[13:50] Are you kidding me? What the hell? What?
[13:53] Right now, people who can't code are using AI tools like these that we're going to talk about today to build apps that make money. We do it every day.
[13:58] Oh my god. Okay, now what I want you to do is I want you to make this, I want you to put a button to the right of the audio player where you're displaying that. And that should be a one click button that takes this audio transcript, or it takes the audio file, downloads it and somehow and sends it to an API to transcribe it in proper format. And I'm going to give you an API to do that. My API key is included. Please add it in the right place. Please make this work. And we are running the prompt here and we'll see how it does. All right. Let's see how it did here. So we're going to go ahead accept.
[16:00] All right. So as you can see here, we have this transcribe button.
[16:03] So we got an error on the transcription. We're just going to copy this whole error.
[16:08] Okay. Okay. All right, we're going to do this again here. Let's see. Add feed.
[16:17] All right, so now this like full length. I don't like that. Is it loading? Is it loading? Is it working? I don't see any immediate failure. I guess we'll just wait and see if it's working. I don't think it's working, guys. Oh my god. Oh my god. If the, if I play it back here and it follows along, in one single prompt. I didn't ask, I asked for the timestamped version. I swear, if this follows along, this is going to be crazy. Oh my god. Hello and welcome. Okay. No way, it's not moving. Let's go.
[16:54] Hello and welcome to the Last Week in AI podcast where you can hear us chat about what's going on with AI. And not as usual, in this episode, we will not summarize or discuss some of last week's most interesting AI news.
[17:08] No code. So, please make the transcript button on the right of the player, then also add a loading state or some indication that it's loading the transcript. Uh, put a nice little animation in the area where the transcript is going to be. What else has that? Um, let's give this a try. Transcribe. All right, I don't hate it. I don't hate it. I don't like the spinny circle though. All right, so now.
[18:11] of Babson to be aware of AI concepts and AI tools, which I suppose if you are an entrepreneur, you certainly want to be on the cutting edge of using at least.
[18:21] Okay, well the next what we want to have happen is I want to be able to now split this transcript into chunks of about 100 to 150 words. So, like, it should be, basically, you determine the range here. And I want these to be cards. So I want to view these as cards. So when I first start playing it, it should start on like card one. And then it should almost be like pages, and then you swipe to go to the next page, to the next page, to the next page and create a little animation for that. And so figure out how to do that. And then obviously the play head should stay on the active word that's being said in the audio file. Um, but um when it moves to the next range, then it should go to the next page and it should continue that process.
[19:12] All right, let's give this a test here. Um, we need to add the feedback again because we haven't had the database yet. Okay. Let's go ahead and transcribe this. So this looks the same. Wow, no way. Okay, I want these to be a little bit longer, but let's see what happens here.
[19:34] blends of, and not as usual in this episode, we will not summarize or discuss some of last week's most interesting AI news. Instead, this is our long promised episode on hardware. We'll get into a lot of detail, basically do a deep dive unrelated to any AI news, but I guess related to the general trends we've seen this past year with a lot of developments in hardware and crazy investments, right in data centers. So to recap, I am one of your hosts, Andre Kurenkov. I studied AI, and I now work at a startup. Yeah, Jeremy Harris, I'm the co-founder of Gladstone AI, an AI National Security Company. And I guess just by way of context of my end too on on the hardware piece. So, you know, the the work that we do is is focused on the kind of WMD level risks that come from advanced AI, current and increasingly future systems. So my footprint on this is I look at AI a lot from the through the lens of of hardware because we're so focused on things like export controls.
[20:09] Okay, um, for the active word, I don't want it to be yellow. I want it to be black with white text. And I want the highlight to be rounded. And what you did was good. I want the sections to be a little bit longer actually, about twice as long.
[20:29] Because before it's like, if you use my news to train your model, I didn't really get anything out of it. Versus now that there's moving more towards these products with source attribution, it's like, well, you know, first, I'm getting money for access, and then I'm getting clicks to my product. So Barron's is doing the same thing with the Wall Street Journal and some of these more financial services things, where at the end of the day, they also need new traffic. If Google, so to speak, has gone away and the social media algorithm, that Elon has put in place downsize links all the time. You need to find some other way for people to come to your product. So, yeah, these deals can get quite expensive just based on what I've heard from from people working in this case. Can you keep order of magnitude? At the early stage, kinda like, you know, early companies are paying about 750k, 1,500,000 for some of this data. I'm sure that, you know, OpenAI's made you paying 50,000,000, 30,000,000, something like that, depending on the source and kinda like some of the more fine grained thing.
[21:10] So LaChat is there. Basically, ChatGBT or Gemini, it's a chatbot. And, very similar. It will now be able to give you access to stories as you chat to them. So another example of that data war and that almost search war going on as well, or I don't know if it's a war, but everyone is trying to get you to use their chat to see about stuff that's going on right now. And Mistral trying to also compete in that chatbot space is pretty curious because I feel like, I don't know if a lot of people are using LaChat and I don't know if they'll be able to compete with ChatGBT and Gemini and so on, which already so dominant. But interesting to see them try. Yeah. The comment there. And moving away from those stories to something a little different and dealing with OpenAI, we have ChatGBT having reminders and to do. So we're adding this better feature called tasks in ChatGBT, which is what it sounds like. It can schedule future actions and reminders similar to stuff that Google Assistant or Siri can do. Is available to paying people plus Steam and Pro subscribers.
[22:16] Okay. I want the selection to be command or control click to do this because later I want to add the ability to highlight and when I highlight a section, I want to be able to press a button that pops up above the selection "Save as note" and this will save it below the card portion in a list of notes that I can save. And I can at any time export those notes as a text file.
[22:35] Oh, yeah, because it's still like swipes. We want to get rid of all swiping functionality. Okay, all right. Let's test this out. So, we're clicking. Okay, so now we're just kind of like clicking, and ooh, I like this. I wish I could... Okay, I like this actually. And now we're going to do control click.
[23:00] will now be able to give you access to stories as you chat to them. So another example of that data war and that almost search war going on as well or I don't know if it's a war, but everyone is trying to get you to use their chat to see about stuff that's going on right now. And
[23:19] Okay. It wasn't quite exact. It seemed to be off by like a page. I'm not sure why this is happening, but I want it to just like whatever the first word was, it should play from there in the transcript as if I'm doing the control click on that word.
[23:30] Because this still works. I can still hit control click.
[23:31] GPT store become this ubiquitous feature of Microsoft products. It will at some point perhaps or some variant of it, I'm sure will be integrated. But this is you know, it's interesting. Like, how much integration might we see between Google's suite of products, you know, like the the professional products, but also just search and all that, and and then tools like this. So, yeah, we'll see. I think distribution will will probably be a much more important story here than a lot of people think. You know, only so many people are going to go to, you know, chat.openai.com or the GPT store. You know, unless these options are are forced upon them or presented, kind of in a in a more aggressive way by uh by a company like Google that's integrating everything. Right. And I'm reminded, I didn't mention this initially, but Meta also rolled out something similar we covered a couple of weeks ago of for Instagram. So, we'll see. Maybe people want their personalized chatbot.
[24:10] All right, so I really hope this works. Okay, so it reset. We got to add in a podcast again. Add feed. We'll click on this one. We will transcribe.
[24:21] And cool. Okay. So we can go like this. Okay. And now it's, so that's kind of my lens on it and obviously the alignment stuff and all that jazz.
[24:31] Nice. It works. Where it has the note, can you not have it have like a little gray background? I don't like those little gray components, they're ugly. And add the notes so that they are in ascending order. So start with the first like the note, the most recent note should be at the bottom of the list. And then above each little section that's highlighted, I want a little play button. When I press that play button, I want it to go to that part in the active audio file. So that means you should likely know like the starting word if you have the list of all the words together. That's how you create the time transcripts. I want it to go to that one and basically play it above.
[25:07] Just play the audio, the full transcript from that point.
[25:09] to write AI programs. And then there were custom machines called Lisp machines that were utilized by
[25:14] Okay, got rid of that whitespace. It should be adding a play button anytime now. Where's the play button? Um, maybe we need to load a new one. Let's go ahead and, let's restart the server. Paste it in. Um, let's go down to a different one. Google Chatbots, transcribe. To the new model,
[25:33] Okay, let's see. Google AI Studio in the API. So the goal here, obviously, is just to make sure there isn't confusion as between which versions you're using, which can come up otherwise in different contexts. And by contrast to, I guess, OpenAI, which I believe I'm trying to remember if they still do, but until fairly recently, at least, you could use GPT3.5 via the API if you just specify your call properly. So, kind of. All right, let's save this as a note.
[25:43] And now we have this little play button.
[25:45] OpenAI, do this uh for the most part. And there have been cases.
[25:48] It wasn't off by like a little bit. What happens if we go like this?
[25:53] OpenAI do this for the most part. And there have been.
[25:56] OpenAI do this for the most part.
[25:59] OpenAI do this for the most part. And there have been.
[26:01] OpenAI do this for the most part.
[26:05] Unless these options are are forced upon them or presented, kind of in a in a more aggressive way by uh by a company like Google that's integrating everything. Right.
[26:16] It wasn't quite exact. It seemed to be off by like a page. I'm not sure why this is happening, but I want it to just like whatever the first word was, it should play from there in the transcript as if I'm doing the control click on that word.
[26:27] So this still works. I can still hit control click.
[26:30] GPT store become this ubiquitous feature of Microsoft products. It will at some point perhaps or some variant of it, I'm sure will be integrated. But this is you know, it's interesting. Like, how much integration might we see between Google's suite of products, you know, like the the professional products, but also just search and all that, and and then tools like this. So, yeah, we'll see. I think distribution will will probably be a much more important story here than a lot of people think. You know, only so many people are going to go to, you know, chat.openai.com or the GPT store. You know, unless these options are are forced upon them or presented, kind of in a in a more aggressive way by uh by a company like Google that's integrating everything. Right. And I'm reminded, I didn't mention this initially, but Meta also rolled out something similar we covered a couple of weeks ago of for Instagram. So, we'll see. Maybe people want their personalized chatbot.
[26:53] Let's go ahead and transcribe this. So we're going to test this out.
[26:58] Okay, let's give this a try. So we'll get into a lot of detail, basically do a deep dive unrelated to any AI news, but I guess related to the general trends we've seen this past year with a lot of developments in hardware and crazy investments, right, in data centers. So to recap, I am one of your hosts, Andrei Kurenkov. I studied AI, and I now work at a startup. Yeah, Jeremy Harris, I'm the co-founder of Gladstone AI, an AI National Security Company. And I guess just by way of context of my end too on on the hardware piece. So, you know, the the work that we do is is focused on the kind of WMD level risks that come from advanced AI, current and increasingly future systems. So my footprint on this is I look at AI a lot from the through the lens of of hardware because we're so focused on things like export controls. Let's test it again. Add to note here. So, you know, the the work that we do is is focused on.
[27:42] All right, now let's add an AI chat. And so we're going to add an AI chat. I want to add a pop-up AI chat at the bottom right of the page. And I want, I want to be able to toggle on chat at the bottom left of the page. And then the chat should replace the two panels on the right. So I should be able to toggle back and forth between the chat view which shows the chat and the main content. And then I should be able to exit out of that and have it return to a little pop-up on the bottom left and see the lists, the two lists that are there. So this only thing that's changing is the ability to open up this chat window and add the ability for me to type into it and enter in, but don't add any of the other functionality. We'll do that after we get the formatting correct.
[28:49] Okay. Yeah, we might need to start a new chat soon.
[28:52] All right, that's pretty cool. Let's see. Nice. All right, so we have the little panel. This is pretty freaking clean, not going to lie. Um, make the chat header light purple with bold text in header and then slightly darker shade of gray for the body. Make the input field more open.
[29:26] Okay, I'm not going to spend too much time on the formatting here. Just a lot of white going on. Don't have a border around the chat area. Please make it just in the area. All right, we're almost there. We're just making one more change to the formatting. Okay, I think it works. So we can just type it out. It expands out. That looks pretty good.
[29:56] Okay, now I want to be able to chat with AI about the active transcript that I'm looking at. So you know how there's cards, right? I want you to be able to chat with the active transcript and ask questions about it, and make the prompt so that it's a helpful assistant helping me summarize and find interesting concepts and ideas about the podcast. And so that's what I want to have happen. And you should have in the prompt that it should have direct quotes in its response. So its responses should be formatted in markdown and it should have little components that cite its sources but it should show the entire quote. Make the quotes no more than two lines long, but it should have a play button next to it that allows me to play that part of the active transcript. We are going to be using OpenAI's new 03 model. Model is called 03 Mini. I think that's what it's called. We need to see models and we're going to type in O-Mini. We're going to use 03 Mini. So that was a very long prompt or at least really hard prompt. Hi, what is this about? Um, and I'm getting an error. We're getting this, uh, 500 error right here. Let's go ahead and paste this. Uh, there was no response. Also, I put the key. Oh, invalid message expected string with maximum length. Okay, so it's too long.
[31:32] Can you please make the max length to the maximum? And let's just say, I think, let's just do 90,000 tokens, please.
[31:44] And let's start with Software Composer podcast. Nice. These are shorter, too. Let's transcribe this. We'll use shorter podcasts to test this out. Let's open up the chat. Let's say, give me the five quotes that best represents the episode's theme. Let's see. I anticipate that it's going to get the text right. It's just going to get like the text response right, but the formatting of the, um, the little play things, the quotes. I don't think it'll get it. I don't know if it's working. We don't have it set, I haven't told it to stream it, so it's going to give us it all at once. Um, Oh, it is streaming. Oh, it is working. No way. If this works, I'm I'm quitting. I'm I'm jumping off the roof if this works. It's over. This is crazy, dude. No way this works.
[32:38] We can rely on natural language speaking to AI to write all of the code for us.
[32:43] Do follow up prompts.
[32:44] And then now I can just, you know, if I think it's important, I can save it as a note right here.
[32:50] In just an hour and a half, I created this app that lets me subscribe to any RSS feed. Here's my podcast, the Software Composer podcast, two episodes out. And then we have the Joe Rogan Experience podcast. I can click on the Theo Vonn episode. And now we can transcribe it. While it's transcribing, let's go ahead and open up O, the new OpenAI model here. And this is actually not just going to be a transcript. We have 114 of these little pages. We can hit play.
[33:23] Mix. Uh-huh. It's nice. I like your hydration though. That's Rob Wolf's company, right? I believe so. Dude, why are people Why is there so much hydration now?
[33:32] So we can select this. You know what? That's a funny part. Save to note. And we have this section right here.
[33:37] He would put guys away by breaking them down. He would break their will and crush.
[33:41] And so we can go like that. But the kicker, to speak in ChatGPT language. Oh, we can also export these. But the kicker here is we can press this chat button. Now what we can say is, please fully describe the top five funniest parts of this episode. And we're going to use the new 03 model right here and it is going to respond to us.
[34:09] And not only is it going to respond, but it's going to give us playable segments. The weighted blanket for dogs dilemma. In another unexpected turn, the discussion veers to a bizarre scenario about using the weighted blankets normally a therapeutic tool to calm dogs. The host ponders whether such an approach. And then so we can say, we can click on this right here.
[34:30] Would he get him a weighted blanket or not for him? No. I don't think they do that for dogs. That much anxiety. He's pretty good.
[34:33] Here is going ham on stage.
[34:36] I saw a video of Angus on stage the other night, like, recently. He's like 70 years old from ACDC, going ham. Old fucking dude, white hair.
[34:45] Who sings that? How dare you? How dare you say who sings that? No. Who who's Angus Young? No. Angus Young is this the guitarist, right? Why is that? It's a goddamn it. My My brother used to beat the shit out of me, that music. But loud, Johnson. That's right. And then before him Bon Scott. Bon Scott died of a drug overdose. Right? Oh, man. Is that how he died? Just went too hard. That's the thing. It's like it's that moment where you're like, do we want to go any harder? I saw a video of Angus on stage the other night, like, recently. He's like, 70 years old from ACDC. Going ham. Old fucking dude, white hair, just dancing. See if you can find that video. Just dancing around on stage. Carl is still up. He's like, dad, you didn't even put me down yet. It takes 3 minutes. It takes 3 minutes to calm him? Yeah. You got to fuck. You got a whole system? It's usually 3 or 4 minutes and then by it, for sure. 7 or 8, he's asleep.
[34:56] And I created that without writing a single line of code. And I will show you the whole video right here.
[35:02] Okay, so I've been talking about the importance of RSS feeds and the first part is where are we getting the RSS feeds? So, for the first episode, we're just gonna use podcasts because as you can see, all of these podcasts have RSS feeds.
[35:15] Now, I just pulled in the audio file for Joe Rogan Experience. And it's like 200 MB, which is pretty big, but I don't really care. It's local on my computer. The problem is, how do we get the transcript of this podcast in a super cheap and easy way?
[35:28] All right, so I want you to make a Python script that downloads the audio from an RSS feed URL and then transcribes the audio with Deepgram API and returns the transcript as a JSON object.
[35:38] And then Deepgram Nova 2, which is the one we're going to use, is a whole lot cheaper than the Whisper API. So we're gonna go with Deepgram Nova 2. And, um, I got a little bit more of an explanation from Perplexity. And now what we're gonna do is we're gonna go back to Cursor and we're gonna say, "Okay, Perplexity said we should use Deepgram. Let me know if you need an API key, if you need the API for it."
[35:59] So we're gonna go ahead accept. All right. So as you can see here, we have this transcribe button. So we got an error on the transcription. We're just going to copy this whole error. All right, so we're going to add an RSS feed. We're going to click on this one. We will transcribe. And, cool. Okay. So we are going like this. Okay. And now it's, so that's kind of my lens on it and obviously the alignment stuff and all that jazz.
[26:30] Nice. It works. Where it has the note, can you not have it have like a little gray background? I don't like those little gray components. They're ugly. And add the notes so that they are in ascending order. So start with the first like the note, the most recent note should be at the bottom of the list. And then above each little section that's highlighted, I want a little play button. When I press that play button, I want it to go to that part in the active audio file. So that means you should likely know like the starting word if you have the list of all the words together. That's how you create the time transcripts. I want it to go to that one and basically play it above. Just play the audio, the full transcript from that point.
[27:10] to write AI programs. And then there were custom machines called lift machines that were used.
[27:14] Okay, got rid of that whitespace. It should be adding a play button anytime now. Where's the play button? Um, maybe we need to load a new one. Let's go ahead and, let's restart the server. Paste it in. Um, let's go down to a different one. Google Chatbots, transcribe. to the new model.
[27:33] Okay, let's see. Google AI Studio in the API. So the goal here, obviously, is just to make sure there isn't confusion as between which versions you're using, which can come up otherwise in different contexts. And by contrast to, I guess, OpenAI, which I believe I'm trying to remember if they still do, but until fairly recently, at least, you could use GPT3.5 via the API if you just specify your call properly. So, kind of. All right, let's save this as a note.
[27:44] And now we have this little play button.
[27:45] OpenAI, do this uh for the most part. And there have been.
[27:49] Was it off by like a little bit? What happens if we go like this?
[27:52] OpenAI do this for the most part. And there have been.
[27:55] OpenAI do this for the most part.
[27:58] OpenAI do this for the most part. And there have been.
[28:01] Unless these options are are forced upon them or presented, kind of in a in a more aggressive way by uh by a company like Google that's integrating everything. Right.
[28:11] It wasn't quite exact. It seemed to be off by like a page. I'm not sure why this is happening, but I want it to just like whatever the first word was, it should play from there in the transcript as if I'm doing the control click on that word.
[28:28] Because this still works. I can still hit control click.
[28:30] GPT store become this ubiquitous feature of Microsoft products. It will at some point perhaps or some variant of it, I'm sure will be integrated. But this is you know, it's interesting. Like, how much integration might we see between Google's suite of products, you know, like the the professional products, but also just search and all that, and and then tools like this. So, yeah, we'll see. I think distribution will will probably be a much more important story here than a lot of people think. You know, only so many people are going to go to, you know, chat.openai.com or the GPT store. You know, unless these options are are forced upon them or presented, kind of in a in a more aggressive way by uh by a company like Google that's integrating everything. Right. And I'm reminded, I didn't mention this initially, but Meta also rolled out something similar we covered a couple of weeks ago of for Instagram. So, we'll see. Maybe people want their personalized chatbot.
[28:52] All right, that's pretty cool. Let's see. Nice. All right, so we have the little panel. This is pretty freaking clean, not going to lie. Um, make the chat header light purple with bold text in header and then slightly darker shade of gray for the body. Make the input field more open.
[29:27] Okay, I'm not going to spend too much time on the formatting here. Just a lot of white going on. Don't have a border around the chat area. Please make it just in the area. All right, we're almost there. We're just making one more change to the formatting. Okay, I think it works. So we can just type it out. It expands out. That looks pretty good.
[29:56] Okay, now I want to be able to chat with AI about the active transcript that I'm looking at. So, you know how there's cards, right? I want you to be able to chat with the active transcript and ask questions about it. And make the prompt so that it's a helpful assistant helping me summarize and find interesting concepts and ideas about the podcast. And so that's what I want to have happen. And you should have in the prompt that it should have direct quotes in its response. So it's responses should be formatted in markdown and it should have little components that cite its sources but it should show the entire quote. Make the quotes no more than two lines long, but it should have a play button next to it that allows me to play that part of the active transcript.
[30:47] We are going to be using OpenAI's new 03 model. Model is called 03 Mini. I think that's what it's called. We need to see models and we're going to type in O-Dash-Mini. We're going to use 03 Mini. All right, so that was a very long prompt or at least really hard prompt. Hi, what is this about? Um, and I'm getting an error. We're getting this, uh, 500 error right here. Let's go ahead and paste this. Uh, there was no response. Also, I put the key. Oh, invalid message. Expected a string with maximum length. Okay, so it's too long.
[31:32] Can you please make the max length to the maximum? And let's just say, I think, let's just do 90,000 tokens, please.
[31:44] And let's start with Software Composer podcast. Nice, these are shorter too. Let's transcribe this. We'll use shorter podcasts to test this out. Let's open up the chat. Let's say, give me the five quotes that best represents the episode's theme. Let's see. I anticipate that it's going to get the text right. It's just going to get like the text response right, but the formatting of the, um, the little play things, the quotes. I don't think it'll get it. I don't know if it's working. We don't have it set, I haven't told it to stream it, so it's going to give us it all at once. Um, oh, it is streaming. Oh, it is working. No way. If this works, I'm I'm quitting. I'm I'm jumping off the roof if this works. It's over. This is crazy, dude. No way this works.
[32:37] We can rely on natural language speaking to AI to write all of the code for us.
[32:43] Do follow up prompts.
[32:44] And then now I can just, you know, if I think it's important, I can save it as a note right here.
[32:50] In just an hour and a half, I created this app that lets me subscribe to any RSS feed. Here's my podcast, the Software Composer podcast, two episodes out. And then we have the Joe Rogan Experience podcast. I can click on the Theo Vonn episode. And now we can transcribe it. While it's transcribing, let's go ahead and open up, the new OpenAI model here. And this is actually not just going to be a transcript. We have 114 of these little pages. We can hit play.
[33:22] Mix. Uh-huh. It's nice. I like your hydration though. That's Rob Wolf's company, right? I believe so. Dude, why are people Why is there so much hydration now?
[33:32] So we can select this. You know what? That's a funny part. Save to note. And we have this section right here.
[33:37] He would put guys away by breaking them down. He would break their will and crush.
[33:41] And so we can go like that. But the kicker to speak in ChatGPT language. Oh, we can also export these. But the kicker here is we can press this chat button. Now what we can say is, "Please fully describe the top five funniest parts of this episode." And we're going to use the new 03 model right here and it is going to respond to us.
[34:08] And not only is it going to respond, but it's going to give us playable segments. The weighted blanket for dogs dilemma. In another unexpected turn, the discussion veers to a bizarre scenario about using the weighted blankets normally a therapeutic tool to calm dogs. The host ponders whether such an approach. And then so we can say, we can click on this right here.
[34:30] Would he get him a weighted blanket or not for him? No. I don't think they do that for dogs. That much anxiety. He's pretty good.
[34:33
] Here is going ham on stage.
[34:36] I saw a video of Angus on stage the other night, like, recently. He's like 70 years old from ACDC, going ham. Old fucking dude, white hair.
[34:45] Who sings that? How dare you? How dare you say who sings that? No. Who who's Angus Young? No. Angus Young is this the guitarist, right? Why is that? It's a goddamn it. My My brother used to beat the shit out of me, that music. But loud, Johnson. That's right. And then before him Bon Scott. Bon Scott died of a drug overdose. Right? Oh, man. Is that how he died? Just went too hard. That's the thing. It's like it's that moment where you're like, do we want to go any harder? I saw a video of Angus on stage the other night, like, recently. He's like, 70 years old from ACDC. Going ham. Old fucking dude, white hair, just dancing. See if you can find that video. Just dancing around on stage. Carl is still up. He's like, dad, you didn't even put me down yet. It takes 3 minutes. It takes 3 minutes to calm him? Yeah. You got to fuck. You got a whole system? It's usually 3 or 4 minutes and then by it, for sure. 7 or 8, he's asleep.
[34:56] And I created that without writing a single line of code. And I will show you the whole video right here.