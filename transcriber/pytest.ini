[pytest]
# Add the source directory to Python path for testing
pythonpath = .

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Directories to search for tests
testpaths = tests

# Asyncio configuration
asyncio_mode = strict
asyncio_default_fixture_loop_scope = function

# Output options for efficient test running
addopts = 
    -v 
    --tb=short
    --strict-markers
    --disable-warnings
    -p no:cacheprovider
    --maxfail=10

# Timeout for tests (in seconds)
timeout = 30
timeout_method = thread

# Coverage configuration
coverage:run:
    source = src
    omit = 
        */tests/*
        */venv/*
        */__pycache__/*

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may use external resources)
    slow: Slow tests (>1s execution time)
    network: Tests requiring network access
    asyncio: Asynchronous tests
    mock_heavy: Tests with extensive mocking

# Logging configuration for tests
log_cli = false
log_cli_level = ERROR
log_file = tests.log
log_file_level = DEBUG

# Performance optimizations
console_output_style = progress
junit_family = xunit2

# Parallel execution settings (requires pytest-xdist)
# Uncomment to enable parallel testing
# addopts = -n auto

# Ignore certain warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Minimal fixture scope to reduce memory usage
fixture_scope_preference = function