{
  "total_errors": 33,
  "syntax_errors": 5,
  "import_errors": 28,
  "errors_by_module": {
    "src.api.health": {
      "count": 1,
      "missing_imports": [
        "ComponentHealth"
      ]
    },
    "src.api.v1": {
      "count": 5,
      "missing_imports": [
        "VTTKnowledgeExtractor"
      ]
    },
    "src.cli.cli": {
      "count": 1,
      "missing_imports": [
        "seed_podcasts"
      ]
    },
    "src.utils.memory": {
      "count": 1,
      "missing_imports": [
        "MemoryMonitor"
      ]
    },
    "src.core.extraction_interface": {
      "count": 7,
      "missing_imports": [
        "EntityType"
      ]
    },
    "src.seeding.concurrency": {
      "count": 2,
      "missing_imports": [
        "Priority"
      ]
    },
    "SyntaxError": {
      "count": 5,
      "missing_imports": []
    },
    "src.extraction.extraction": {
      "count": 1,
      "missing_imports": [
        "create_extractor"
      ]
    },
    "src.core.interfaces": {
      "count": 2,
      "missing_imports": [
        "AudioProvider"
      ]
    },
    "src.utils.logging": {
      "count": 1,
      "missing_imports": [
        "ContextFilter"
      ]
    },
    "src.utils.retry": {
      "count": 2,
      "missing_imports": [
        "retry",
        "Exception"
      ]
    },
    "src.processing.segmentation": {
      "count": 2,
      "missing_imports": [
        "VTTSegmenter"
      ]
    },
    "src.utils.text_processing": {
      "count": 3,
      "missing_imports": [
        "normalize_entity_name"
      ]
    }
  },
  "all_errors": [
    {
      "test_file": "tests/test_cli.py",
      "error_type": "ImportError",
      "module": "src.api.health",
      "missing_import": "(",
      "missing_name": "ComponentHealth",
      "from_module": "src.api.health"
    },
    {
      "test_file": "tests/api/test_health.py",
      "error_type": "ImportError",
      "module": "src.api.v1",
      "missing_import": "(",
      "missing_name": "VTTKnowledgeExtractor",
      "from_module": "src.api.v1"
    },
    {
      "test_file": "tests/api/test_v1_api.py",
      "error_type": "ImportError",
      "module": "src.api.v1",
      "missing_import": "seed_podcast, seed_podcasts, VTTKnowledgeExtractor",
      "missing_name": "VTTKnowledgeExtractor",
      "from_module": "src.api.v1"
    },
    {
      "test_file": "tests/e2e/test_e2e_scenarios.py",
      "error_type": "ImportError",
      "module": "src.api.v1",
      "missing_import": "seed_podcast, VTTKnowledgeExtractor",
      "missing_name": "VTTKnowledgeExtractor",
      "from_module": "src.api.v1"
    },
    {
      "test_file": "tests/e2e/test_vtt_pipeline_e2e.py",
      "error_type": "ImportError",
      "module": "src.cli.cli",
      "missing_import": "main, seed_podcasts, health_check, validate_config, schema_stats",
      "missing_name": "seed_podcasts",
      "from_module": "src.cli.cli"
    },
    {
      "test_file": "tests/integration/test_cli_commands.py",
      "error_type": "ImportError",
      "module": "src.utils.memory",
      "missing_import": "MemoryMonitor",
      "missing_name": "MemoryMonitor",
      "from_module": "src.utils.memory"
    },
    {
      "test_file": "tests/integration/test_performance_benchmarks.py",
      "error_type": "ImportError",
      "module": "src.core.extraction_interface",
      "missing_import": "Entity, EntityType, Relationship, RelationshipType",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/integration/test_vtt_e2e.py",
      "error_type": "ImportError",
      "module": "src.api.v1",
      "missing_import": "VTTKnowledgeExtractor, seed_podcast",
      "missing_name": "VTTKnowledgeExtractor",
      "from_module": "src.api.v1"
    },
    {
      "test_file": "tests/performance/load_test.py",
      "error_type": "ImportError",
      "module": "src.api.v1",
      "missing_import": "seed_podcast, VTTKnowledgeExtractor",
      "missing_name": "VTTKnowledgeExtractor",
      "from_module": "src.api.v1"
    },
    {
      "test_file": "tests/performance/test_performance_regression.py",
      "error_type": "ImportError",
      "module": "src.core.extraction_interface",
      "missing_import": "Entity, Insight, Quote, EntityType, InsightType, QuoteType, ComplexityLevel",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/processing/test_complexity_analysis.py",
      "error_type": "ImportError",
      "module": "src.core.extraction_interface",
      "missing_import": "Entity, EntityType",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/processing/test_entity_resolution.py",
      "error_type": "ImportError",
      "module": "src.core.extraction_interface",
      "missing_import": "Entity, Insight, Segment, EntityType, InsightType",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/processing/test_importance_scoring.py",
      "error_type": "ImportError",
      "module": "src.core.extraction_interface",
      "missing_import": "Entity, Insight, Quote, EntityType, InsightType, QuoteType",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/processing/test_parsers.py",
      "error_type": "ImportError",
      "module": "src.core.extraction_interface",
      "missing_import": "Entity, Insight, Quote, EntityType, InsightType, QuoteType",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/processing/test_vtt_extraction.py",
      "error_type": "ImportError",
      "module": "src.seeding.concurrency",
      "missing_import": "(",
      "missing_name": "Priority",
      "from_module": "src.seeding.concurrency"
    },
    {
      "test_file": "tests/seeding/test_concurrency.py",
      "error_type": "ImportError",
      "missing_name": "Priority",
      "from_module": "src.seeding.concurrency",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/seeding/concurrency.py",
      "module": "src.seeding.concurrency"
    },
    {
      "test_file": "tests/unit/test_error_handling_utils.py",
      "error_type": "SyntaxError",
      "error_details": "E   SyntaxError: invalid syntax"
    },
    {
      "test_file": "tests/unit/test_extraction_integration.py",
      "error_type": "ImportError",
      "module": "src.extraction.extraction",
      "missing_import": "(",
      "missing_name": "create_extractor",
      "from_module": "src.extraction.extraction"
    },
    {
      "test_file": "tests/unit/test_extraction_unit.py",
      "error_type": "ImportError",
      "module": "src.core.interfaces",
      "missing_import": "(",
      "missing_name": "AudioProvider",
      "from_module": "src.core.interfaces"
    },
    {
      "test_file": "tests/unit/test_interfaces_full.py",
      "error_type": "ImportError",
      "missing_name": "AudioProvider",
      "from_module": "src.core.interfaces",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/core/interfaces.py",
      "module": "src.core.interfaces"
    },
    {
      "test_file": "tests/unit/test_logging.py",
      "error_type": "SyntaxError",
      "error_details": "E   SyntaxError: invalid syntax"
    },
    {
      "test_file": "tests/unit/test_logging_utils.py",
      "error_type": "ImportError",
      "missing_name": "ContextFilter",
      "from_module": "src.utils.logging",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/utils/logging.py",
      "module": "src.utils.logging"
    },
    {
      "test_file": "tests/unit/test_orchestrator_scenarios.py",
      "error_type": "ImportError",
      "missing_name": "EntityType",
      "from_module": "src.core.extraction_interface",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/core/extraction_interface.py",
      "module": "src.core.extraction_interface"
    },
    {
      "test_file": "tests/unit/test_orchestrator_unit.py",
      "error_type": "SyntaxError",
      "error_details": "E   SyntaxError: invalid syntax"
    },
    {
      "test_file": "tests/unit/test_rate_limiting_utils.py",
      "error_type": "ImportError",
      "module": "src.utils.retry",
      "missing_import": "(",
      "missing_name": "Exception",
      "from_module": "src.utils.retry"
    },
    {
      "test_file": "tests/unit/test_retry_comprehensive.py",
      "error_type": "ImportError",
      "module": "src.utils.retry",
      "missing_import": "(",
      "missing_name": "retry",
      "from_module": "src.utils.retry"
    },
    {
      "test_file": "tests/unit/test_retry_utils.py",
      "error_type": "ImportError",
      "module": "src.processing.segmentation",
      "missing_import": "(",
      "missing_name": "VTTSegmenter",
      "from_module": "src.processing.segmentation"
    },
    {
      "test_file": "tests/unit/test_segmentation.py",
      "error_type": "ImportError",
      "missing_name": "VTTSegmenter",
      "from_module": "src.processing.segmentation",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/processing/segmentation.py",
      "module": "src.processing.segmentation"
    },
    {
      "test_file": "tests/unit/test_text_processing_comprehensive.py",
      "error_type": "SyntaxError",
      "error_details": "E   SyntaxError: invalid syntax"
    },
    {
      "test_file": "tests/unit/test_validation_comprehensive.py",
      "error_type": "ImportError",
      "module": "src.utils.text_processing",
      "missing_import": "normalize_entity_name, calculate_name_similarity",
      "missing_name": "normalize_entity_name",
      "from_module": "src.utils.text_processing"
    },
    {
      "test_file": "tests/unit/test_validation_utils.py",
      "error_type": "ImportError",
      "missing_name": "normalize_entity_name",
      "from_module": "src.utils.text_processing",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/utils/text_processing.py",
      "module": "src.utils.text_processing"
    },
    {
      "test_file": "tests/utils/test_text_processing.py",
      "error_type": "SyntaxError",
      "error_details": "E   SyntaxError: invalid syntax"
    },
    {
      "test_file": "tests/utils/test_validation.py",
      "error_type": "ImportError",
      "missing_name": "normalize_entity_name",
      "from_module": "src.utils.text_processing",
      "module_path": "/home/sergeblumenfeld/podcastknowledge/seeding_pipeline/src/utils/text_processing.py",
      "module": "src.utils.text_processing"
    }
  ]
}