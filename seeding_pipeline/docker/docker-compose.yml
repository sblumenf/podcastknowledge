version: '3.8'

services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: podcast-kg-pipeline:latest
    container_name: podcast-kg-app
    environment:
      # Neo4j connection
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      # Redis connection
      - REDIS_URL=redis://redis:6379/0
      # API keys (from .env file)
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      # Logging
      - PODCAST_KG_LOG_LEVEL=${LOG_LEVEL:-INFO}
      # Python
      - PYTHONUNBUFFERED=1
      # Jaeger tracing
      - JAEGER_HOST=jaeger
      - JAEGER_PORT=6831
      - TRACING_SERVICE_NAME=podcast-kg-pipeline
      - ENVIRONMENT=${ENVIRONMENT:-development}
    volumes:
      # Mount source code for development
      - ./src:/app/src:ro
      - ./config:/app/config:ro
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
      # Mount test data for development
      - ./tests/fixtures:/app/tests/fixtures:ro
    depends_on:
      neo4j:
        condition: service_healthy
      redis:
        condition: service_healthy
      jaeger:
        condition: service_healthy
    networks:
      - podcast-kg-network
    command: ["--help"]  # Override with actual command

  # Neo4j database
  neo4j:
    image: neo4j:5.12.0
    container_name: podcast-kg-neo4j
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD:-password}
      - NEO4J_PLUGINS=["apoc", "graph-data-science"]
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
      - NEO4J_dbms_default__listen__address=0.0.0.0
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*,gds.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*,gds.*
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD", "neo4j", "status"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 40s
    networks:
      - podcast-kg-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: podcast-kg-redis
    command: redis-server --appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - podcast-kg-network

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: podcast-kg-jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    ports:
      - "5775:5775/udp"  # Zipkin/thrift compact
      - "6831:6831/udp"  # Jaeger thrift compact
      - "6832:6832/udp"  # Jaeger thrift binary
      - "5778:5778"      # Serve configs
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # Jaeger collector HTTP
      - "14250:14250"    # Jaeger collector gRPC
      - "9411:9411"      # Zipkin compatible endpoint
    volumes:
      - jaeger_data:/badger
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:14269/metrics"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - podcast-kg-network

  # Development tools container
  dev-tools:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage with dev dependencies
    image: podcast-kg-dev:latest
    container_name: podcast-kg-dev
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD:-password}
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - .:/app
      - /app/.venv  # Don't override virtual env
    working_dir: /app
    command: /bin/bash
    stdin_open: true
    tty: true
    depends_on:
      - neo4j
      - redis
    networks:
      - podcast-kg-network

  # Optional: Jupyter notebook for experimentation
  jupyter:
    image: jupyter/base-notebook:latest
    container_name: podcast-kg-jupyter
    environment:
      - JUPYTER_ENABLE_LAB=yes
    ports:
      - "8888:8888"
    volumes:
      - ./notebooks:/home/jovyan/work
      - ./src:/home/jovyan/src:ro
      - ./data:/home/jovyan/data
    networks:
      - podcast-kg-network
    profiles:
      - development

networks:
  podcast-kg-network:
    driver: bridge

volumes:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:
  redis_data:
  jaeger_data: