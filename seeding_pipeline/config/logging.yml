version: 1
disable_existing_loggers: false

formatters:
  json:
    class: pythonjsonlogger.jsonlogger.JsonFormatter
    format: "%(timestamp)s %(level)s %(name)s %(message)s"
  
  simple:
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
    datefmt: "%Y-%m-%d %H:%M:%S"

filters:
  context:
    (): src.utils.logging.ContextFilter
    app_name: podcast-kg-pipeline
  
  performance:
    (): src.utils.logging.PerformanceFilter

handlers:
  console:
    class: logging.StreamHandler
    level: INFO
    formatter: json
    filters: [context]
    stream: ext://sys.stdout
  
  file:
    class: logging.handlers.RotatingFileHandler
    level: INFO
    formatter: json
    filters: [context, performance]
    filename: logs/podcast-kg.log
    maxBytes: 104857600  # 100MB
    backupCount: 5
    encoding: utf8
  
  error_file:
    class: logging.handlers.RotatingFileHandler
    level: ERROR
    formatter: json
    filters: [context]
    filename: logs/podcast-kg-errors.log
    maxBytes: 52428800  # 50MB
    backupCount: 3
    encoding: utf8

loggers:
  src:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.providers:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.processing:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.seeding:
    level: INFO
    handlers: [console, file]
    propagate: false
  
  src.utils:
    level: INFO
    handlers: [console, file]
    propagate: false

root:
  level: INFO
  handlers: [console, file, error_file]

# Reduce noise from third-party libraries
loggers_third_party:
  urllib3:
    level: WARNING
  
  neo4j:
    level: WARNING
  
  whisper:
    level: WARNING
  
  transformers:
    level: WARNING
  
  torch:
    level: WARNING