name: Critical Path Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:5.14.0
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
        ports:
          - 7687:7687
        options: >-
          --health-cmd "neo4j status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Wait for Neo4j
      run: |
        echo "Waiting for Neo4j to be ready..."
        for i in {1..30}; do
          if nc -z localhost 7687; then
            echo "Neo4j is ready!"
            break
          fi
          echo "Waiting for Neo4j... ($i/30)"
          sleep 2
        done
    
    - name: Run critical path tests
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: testpassword
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest -v -m integration \
          --tb=short \
          --timeout=300 \
          tests/integration/test_neo4j_critical_path.py \
          tests/integration/test_vtt_processing.py \
          tests/integration/test_e2e_critical_path.py
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          test-results/
          htmlcov/
        retention-days: 7

  performance:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    services:
      neo4j:
        image: neo4j:5.14.0
        env:
          NEO4J_AUTH: neo4j/testpassword
          NEO4J_ACCEPT_LICENSE_AGREEMENT: "yes"
        ports:
          - 7687:7687
        options: >-
          --health-cmd "neo4j status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run performance baseline tests
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: testpassword
        PYTHONPATH: ${{ github.workspace }}
      run: |
        pytest -v -m performance \
          --tb=short \
          tests/performance/test_baseline_performance.py
    
    - name: Upload performance results
      uses: actions/upload-artifact@v3
      with:
        name: performance-baselines
        path: |
          **/performance_baseline.txt
          **/batch_performance_baseline.txt
          **/memory_usage_baseline.txt
        retention-days: 30