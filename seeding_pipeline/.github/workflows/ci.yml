name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      neo4j:
        image: neo4j:latest
        env:
          NEO4J_AUTH: neo4j/password
        ports:
          - 7474:7474
          - 7687:7687
        options: >-
          --health-cmd "cypher-shell -u neo4j -p password 'RETURN 1'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
    
    - name: Run tests with coverage
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
      run: |
        # Run tests and capture result
        pytest -v --cov=src --cov-report=xml --cov-report=html --tb=short || TEST_RESULT=$?
        
        # Check if failures match known issues
        if [ ! -z "$TEST_RESULT" ] && [ $TEST_RESULT -ne 0 ]; then
          echo "Tests failed with exit code $TEST_RESULT"
          echo "Checking against known issues..."
          python scripts/manage_known_issues.py check || true
          echo "Review KNOWN_ISSUES.md for documented limitations"
          # For now, still fail the build but with context
          exit $TEST_RESULT
        fi
    
    - name: Run performance tests
      env:
        NEO4J_URI: bolt://localhost:7687
        NEO4J_USER: neo4j
        NEO4J_PASSWORD: password
      run: |
        pytest tests/performance -v
      continue-on-error: true  # Make performance tests non-blocking initially
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
