{
  "total_failing_tests": 34,
  "error_types": {
    "ImportError": 28,
    "SyntaxError": 5,
    "import file mismatch": 1
  },
  "unique_missing_imports": [
    "AudioProvider",
    "ComponentHealth",
    "ContextFilter",
    "EntityType",
    "Exception",
    "FixedWindowRateLimiter",
    "MemoryMonitor",
    "Priority",
    "VTTKnowledgeExtractor",
    "VTTSegmenter",
    "create_extractor",
    "load_podcast_configs",
    "normalize_entity_name",
    "retry",
    "seed_podcasts"
  ],
  "unique_source_modules": [
    "src.api.health",
    "src.api.v1",
    "src.cli.cli",
    "src.core.extraction_interface",
    "src.core.interfaces",
    "src.extraction.extraction",
    "src.processing.segmentation",
    "src.seeding.concurrency",
    "src.utils.logging",
    "src.utils.memory",
    "src.utils.rate_limiting",
    "src.utils.retry",
    "src.utils.text_processing"
  ],
  "errors_by_test": {
    "tests/test_cli.py": {
      "test_file": "tests/test_cli.py",
      "errors": [
        {
          "missing_import": "load_podcast_configs",
          "source_module": "src.cli.cli",
          "all_imports_attempted": [
            "main",
            "load_podcast_configs",
            "seed_podcasts",
            "health_check",
            "validate_config"
          ],
          "import_line": "from src.cli.cli import main, load_podcast_configs, seed_podcasts, health_check, validate_config"
        }
      ]
    },
    "tests/api/test_health.py": {
      "test_file": "tests/api/test_health.py",
      "errors": [
        {
          "missing_import": "ComponentHealth",
          "source_module": "src.api.health",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.api.health import ("
        }
      ]
    },
    "tests/api/test_v1_api.py": {
      "test_file": "tests/api/test_v1_api.py",
      "errors": [
        {
          "missing_import": "VTTKnowledgeExtractor",
          "source_module": "src.api.v1",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.api.v1 import ("
        }
      ]
    },
    "tests/e2e/test_e2e_scenarios.py": {
      "test_file": "tests/e2e/test_e2e_scenarios.py",
      "errors": [
        {
          "missing_import": "VTTKnowledgeExtractor",
          "source_module": "src.api.v1",
          "all_imports_attempted": [
            "seed_podcast",
            "seed_podcasts",
            "VTTKnowledgeExtractor"
          ],
          "import_line": "from src.api.v1 import seed_podcast, seed_podcasts, VTTKnowledgeExtractor"
        }
      ]
    },
    "tests/e2e/test_vtt_pipeline_e2e.py": {
      "test_file": "tests/e2e/test_vtt_pipeline_e2e.py",
      "errors": [
        {
          "missing_import": "VTTKnowledgeExtractor",
          "source_module": "src.api.v1",
          "all_imports_attempted": [
            "seed_podcast",
            "VTTKnowledgeExtractor"
          ],
          "import_line": "from src.api.v1 import seed_podcast, VTTKnowledgeExtractor"
        }
      ]
    },
    "tests/integration/test_cli_commands.py": {
      "test_file": "tests/integration/test_cli_commands.py",
      "errors": [
        {
          "missing_import": "seed_podcasts",
          "source_module": "src.cli.cli",
          "all_imports_attempted": [
            "main",
            "seed_podcasts",
            "health_check",
            "validate_config",
            "schema_stats"
          ],
          "import_line": "from src.cli.cli import main, seed_podcasts, health_check, validate_config, schema_stats"
        }
      ]
    },
    "tests/integration/test_performance_benchmarks.py": {
      "test_file": "tests/integration/test_performance_benchmarks.py",
      "errors": [
        {
          "missing_import": "MemoryMonitor",
          "source_module": "src.utils.memory",
          "all_imports_attempted": [
            "MemoryMonitor"
          ],
          "import_line": "from src.utils.memory import MemoryMonitor"
        }
      ]
    },
    "tests/integration/test_vtt_e2e.py": {
      "test_file": "tests/integration/test_vtt_e2e.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "EntityType",
            "Relationship",
            "RelationshipType"
          ],
          "import_line": "from src.core.extraction_interface import Entity, EntityType, Relationship, RelationshipType"
        }
      ]
    },
    "tests/performance/load_test.py": {
      "test_file": "tests/performance/load_test.py",
      "errors": [
        {
          "missing_import": "VTTKnowledgeExtractor",
          "source_module": "src.api.v1",
          "all_imports_attempted": [
            "VTTKnowledgeExtractor",
            "seed_podcast"
          ],
          "import_line": "from src.api.v1 import VTTKnowledgeExtractor, seed_podcast"
        }
      ]
    },
    "tests/performance/test_performance_regression.py": {
      "test_file": "tests/performance/test_performance_regression.py",
      "errors": [
        {
          "missing_import": "VTTKnowledgeExtractor",
          "source_module": "src.api.v1",
          "all_imports_attempted": [
            "seed_podcast",
            "VTTKnowledgeExtractor"
          ],
          "import_line": "from src.api.v1 import seed_podcast, VTTKnowledgeExtractor"
        }
      ]
    },
    "tests/processing/test_complexity_analysis.py": {
      "test_file": "tests/processing/test_complexity_analysis.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "Insight",
            "Quote",
            "EntityType",
            "InsightType",
            "QuoteType",
            "ComplexityLevel"
          ],
          "import_line": "from src.core.extraction_interface import Entity, Insight, Quote, EntityType, InsightType, QuoteType, ComplexityLevel"
        }
      ]
    },
    "tests/processing/test_entity_resolution.py": {
      "test_file": "tests/processing/test_entity_resolution.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "EntityType"
          ],
          "import_line": "from src.core.extraction_interface import Entity, EntityType"
        }
      ]
    },
    "tests/processing/test_importance_scoring.py": {
      "test_file": "tests/processing/test_importance_scoring.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "Insight",
            "Segment",
            "EntityType",
            "InsightType"
          ],
          "import_line": "from src.core.extraction_interface import Entity, Insight, Segment, EntityType, InsightType"
        }
      ]
    },
    "tests/processing/test_parsers.py": {
      "test_file": "tests/processing/test_parsers.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "Insight",
            "Quote",
            "EntityType",
            "InsightType",
            "QuoteType"
          ],
          "import_line": "from src.core.extraction_interface import Entity, Insight, Quote, EntityType, InsightType, QuoteType"
        }
      ]
    },
    "tests/processing/test_vtt_extraction.py": {
      "test_file": "tests/processing/test_vtt_extraction.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "Insight",
            "Quote",
            "EntityType",
            "InsightType",
            "QuoteType"
          ],
          "import_line": "from src.core.extraction_interface import Entity, Insight, Quote, EntityType, InsightType, QuoteType"
        }
      ]
    },
    "tests/seeding/test_concurrency.py": {
      "test_file": "tests/seeding/test_concurrency.py",
      "errors": [
        {
          "missing_import": "Priority",
          "source_module": "src.seeding.concurrency",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.seeding.concurrency import ("
        }
      ]
    },
    "tests/unit/test_error_handling_utils.py": {
      "test_file": "tests/unit/test_error_handling_utils.py",
      "errors": [
        {
          "error_type": "SyntaxError",
          "message": "invalid syntax"
        }
      ]
    },
    "tests/unit/test_extraction_integration.py": {
      "test_file": "tests/unit/test_extraction_integration.py",
      "errors": [
        {
          "missing_import": "create_extractor",
          "source_module": "src.extraction.extraction",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.extraction.extraction import ("
        }
      ]
    },
    "tests/unit/test_extraction_unit.py": {
      "test_file": "tests/unit/test_extraction_unit.py",
      "errors": [
        {
          "missing_import": "create_extractor",
          "source_module": "src.extraction.extraction",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.extraction.extraction import ("
        }
      ]
    },
    "tests/unit/test_interfaces_full.py": {
      "test_file": "tests/unit/test_interfaces_full.py",
      "errors": [
        {
          "missing_import": "AudioProvider",
          "source_module": "src.core.interfaces",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.core.interfaces import ("
        }
      ]
    },
    "tests/unit/test_logging.py": {
      "test_file": "tests/unit/test_logging.py",
      "errors": [
        {
          "error_type": "SyntaxError",
          "message": "invalid syntax"
        }
      ]
    },
    "tests/unit/test_logging_utils.py": {
      "test_file": "tests/unit/test_logging_utils.py",
      "errors": [
        {
          "missing_import": "ContextFilter",
          "source_module": "src.utils.logging",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.utils.logging import ("
        }
      ]
    },
    "tests/unit/test_metrics.py": {
      "test_file": "tests/unit/test_metrics.py",
      "errors": [
        {
          "error_type": "import file mismatch",
          "message": "HINT: remove __pycache__ / .pyc files and/or use a unique basename"
        }
      ]
    },
    "tests/unit/test_orchestrator_scenarios.py": {
      "test_file": "tests/unit/test_orchestrator_scenarios.py",
      "errors": [
        {
          "missing_import": "EntityType",
          "source_module": "src.core.extraction_interface",
          "all_imports_attempted": [
            "Entity",
            "Insight",
            "Quote",
            "EntityType"
          ],
          "import_line": "from src.core.extraction_interface import Entity, Insight, Quote, EntityType"
        }
      ]
    },
    "tests/unit/test_orchestrator_unit.py": {
      "test_file": "tests/unit/test_orchestrator_unit.py",
      "errors": [
        {
          "error_type": "SyntaxError",
          "message": "invalid syntax"
        }
      ]
    },
    "tests/unit/test_rate_limiting_utils.py": {
      "test_file": "tests/unit/test_rate_limiting_utils.py",
      "errors": [
        {
          "missing_import": "FixedWindowRateLimiter",
          "source_module": "src.utils.rate_limiting",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.utils.rate_limiting import ("
        }
      ]
    },
    "tests/unit/test_retry_comprehensive.py": {
      "test_file": "tests/unit/test_retry_comprehensive.py",
      "errors": [
        {
          "missing_import": "Exception",
          "source_module": "src.utils.retry",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.utils.retry import ("
        }
      ]
    },
    "tests/unit/test_retry_utils.py": {
      "test_file": "tests/unit/test_retry_utils.py",
      "errors": [
        {
          "missing_import": "retry",
          "source_module": "src.utils.retry",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.utils.retry import ("
        }
      ]
    },
    "tests/unit/test_segmentation.py": {
      "test_file": "tests/unit/test_segmentation.py",
      "errors": [
        {
          "missing_import": "VTTSegmenter",
          "source_module": "src.processing.segmentation",
          "all_imports_attempted": [
            "("
          ],
          "import_line": "from src.processing.segmentation import ("
        }
      ]
    },
    "tests/unit/test_text_processing_comprehensive.py": {
      "test_file": "tests/unit/test_text_processing_comprehensive.py",
      "errors": [
        {
          "error_type": "SyntaxError",
          "message": "invalid syntax"
        }
      ]
    },
    "tests/unit/test_validation_comprehensive.py": {
      "test_file": "tests/unit/test_validation_comprehensive.py",
      "errors": [
        {
          "missing_import": "normalize_entity_name",
          "source_module": "src.utils.text_processing",
          "all_imports_attempted": [
            "normalize_entity_name",
            "calculate_name_similarity"
          ],
          "import_line": "from src.utils.text_processing import normalize_entity_name, calculate_name_similarity"
        }
      ]
    },
    "tests/unit/test_validation_utils.py": {
      "test_file": "tests/unit/test_validation_utils.py",
      "errors": [
        {
          "missing_import": "normalize_entity_name",
          "source_module": "src.utils.text_processing",
          "all_imports_attempted": [
            "normalize_entity_name",
            "calculate_name_similarity"
          ],
          "import_line": "from src.utils.text_processing import normalize_entity_name, calculate_name_similarity"
        }
      ]
    },
    "tests/utils/test_text_processing.py": {
      "test_file": "tests/utils/test_text_processing.py",
      "errors": [
        {
          "error_type": "SyntaxError",
          "message": "invalid syntax"
        }
      ]
    },
    "tests/utils/test_validation.py": {
      "test_file": "tests/utils/test_validation.py",
      "errors": [
        {
          "missing_import": "normalize_entity_name",
          "source_module": "src.utils.text_processing",
          "all_imports_attempted": [
            "normalize_entity_name",
            "calculate_name_similarity"
          ],
          "import_line": "from src.utils.text_processing import normalize_entity_name, calculate_name_similarity"
        }
      ]
    }
  }
}