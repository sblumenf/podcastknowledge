{
  "files_fixed": 46,
  "total_changes": 73,
  "changes": [
    [
      "tests/test_cli.py",
      "from cli import -> from src.cli.cli import"
    ],
    [
      "tests/test_cli.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/test_component_baselines.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/api/test_v1_api.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/e2e/test_e2e_scenarios.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/e2e/test_vtt_pipeline_e2e.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/fixtures/domain_fixtures.py",
      "from src.core.models import Segment -> from src.core.extraction_interface import Segment"
    ],
    [
      "tests/integration/dependency_mapping.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/integration/test_checkpoint_recovery.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_cli_commands.py",
      "from cli import -> from src.cli.cli import"
    ],
    [
      "tests/integration/test_cli_commands.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_comprehensive_extraction_modes.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_golden_outputs_validation.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/integration/test_golden_outputs_validation.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_performance_benchmarks.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/integration/test_performance_benchmarks.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_signal_handling.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_api_contracts.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_orchestrator.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_vtt_e2e.py",
      "from cli import -> from src.cli.cli import"
    ],
    [
      "tests/integration/test_vtt_e2e.py",
      "from src.processing.vtt_parser import -> from src.vtt.vtt_parser import"
    ],
    [
      "tests/integration/test_vtt_e2e.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/integration/test_vtt_e2e.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/integration/test_vtt_batch_processing.py",
      "from src.processing.vtt_parser import -> from src.vtt.vtt_parser import"
    ],
    [
      "tests/performance/benchmark_schemaless.py",
      "from src.core.models import Segment -> from src.core.extraction_interface import Segment"
    ],
    [
      "tests/performance/load_test.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/performance/test_domain_diversity.py",
      "from src.core.models import Segment -> from src.core.extraction_interface import Segment"
    ],
    [
      "tests/performance/test_performance_regression.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/performance/test_vtt_performance_benchmarks.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/performance/test_vtt_performance_benchmarks.py",
      "from src.processing.vtt_parser import -> from src.vtt.vtt_parser import"
    ],
    [
      "tests/processing/test_complexity_analysis.py",
      "from src.processing.complexity_analysis import -> from src.extraction.complexity_analysis import"
    ],
    [
      "tests/processing/test_complexity_analysis.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/processing/test_episode_flow.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/processing/test_importance_scoring.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/processing/test_importance_scoring.py",
      "from src.processing.importance_scoring import -> from src.extraction.importance_scoring import"
    ],
    [
      "tests/processing/test_importance_scoring.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/processing/test_prompts.py",
      "from src.processing.prompts import -> from src.extraction.prompts import"
    ],
    [
      "tests/processing/test_entity_resolution.py",
      "from src.processing.entity_resolution import -> from src.extraction.entity_resolution import"
    ],
    [
      "tests/processing/test_entity_resolution.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/processing/test_parsers.py",
      "from src.processing.parsers import -> from src.extraction.parsers import"
    ],
    [
      "tests/processing/test_parsers.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/processing/test_vtt_parser.py",
      "from src.processing.vtt_parser import -> from src.vtt.vtt_parser import"
    ],
    [
      "tests/processing/test_vtt_extraction.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/processing/test_vtt_extraction.py",
      "from src.processing.vtt_parser import -> from src.vtt.vtt_parser import"
    ],
    [
      "tests/processing/test_vtt_extraction.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/processing/test_preprocessor.py",
      "from src.processing.preprocessor import -> from src.extraction.preprocessor import"
    ],
    [
      "tests/processing/test_preprocessor.py",
      "from src.core.models import Segment -> from src.core.extraction_interface import Segment"
    ],
    [
      "tests/processing/test_extraction.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/processing/test_extraction.py",
      "from src.core.models import Segment -> from src.core.extraction_interface import Segment"
    ],
    [
      "tests/scripts/test_integration.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/scripts/test_integration.py",
      "from src.processing.preprocessor import -> from src.extraction.preprocessor import"
    ],
    [
      "tests/scripts/test_integration.py",
      "from src.processing.entity_resolution import -> from src.extraction.entity_resolution import"
    ],
    [
      "tests/unit/test_extraction_integration.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/unit/test_extraction_integration.py",
      "from src.processing.parsers import -> from src.extraction.parsers import"
    ],
    [
      "tests/unit/test_extraction_integration.py",
      "from src.processing.prompts import -> from src.extraction.prompts import"
    ],
    [
      "tests/unit/test_extraction_integration.py",
      "from src.processing.importance_scoring import -> from src.extraction.importance_scoring import"
    ],
    [
      "tests/unit/test_extraction_unit.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/unit/test_orchestrator_scenarios.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/unit/test_orchestrator_scenarios.py",
      "from src.core.models import Entity -> from src.core.extraction_interface import Entity"
    ],
    [
      "tests/unit/test_orchestrator_unit.py",
      "from src.processing.extraction import -> from src.extraction.extraction import"
    ],
    [
      "tests/unit/test_orchestrator_unit.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/unit/test_orchestrator_unit.py",
      "EnhancedPodcastSegmenter -> VTTSegmenter"
    ],
    [
      "tests/unit/test_rate_limiting_utils.py",
      "SlidingWindowRateLimiter -> RateLimiter"
    ],
    [
      "tests/unit/test_retry_comprehensive.py",
      "RetryError -> Exception"
    ],
    [
      "tests/unit/test_retry_utils.py",
      "retry_with_backoff -> retry"
    ],
    [
      "tests/unit/test_retry_utils.py",
      "RetryError -> Exception"
    ],
    [
      "tests/unit/test_text_processing_utils.py",
      "Removed non-existent text processing imports"
    ],
    [
      "tests/unit/test_entity_resolution.py",
      "from src.processing.entity_resolution import -> from src.extraction.entity_resolution import"
    ],
    [
      "tests/unit/test_segmentation.py",
      "EnhancedPodcastSegmenter -> VTTSegmenter"
    ],
    [
      "tests/unit/test_segmentation.py",
      "from src.core.models import Segment -> from src.core.extraction_interface import Segment"
    ],
    [
      "tests/unit/test_api.py",
      "PodcastKnowledgePipeline -> VTTKnowledgeExtractor"
    ],
    [
      "tests/unit/test_parsers.py",
      "from src.processing.parsers import -> from src.extraction.parsers import"
    ],
    [
      "tests/utils/test_text_processing.py",
      "Removed non-existent text processing imports"
    ]
  ]
}