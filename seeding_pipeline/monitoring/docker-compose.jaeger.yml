version: '3.8'

services:
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: podcast-kg-jaeger
    restart: unless-stopped
    ports:
      - "5775:5775/udp"  # Zipkin/thrift compact
      - "6831:6831/udp"  # Jaeger thrift compact
      - "6832:6832/udp"  # Jaeger thrift binary
      - "5778:5778"      # Serve configs
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # Jaeger collector HTTP
      - "14250:14250"    # Jaeger collector gRPC
      - "9411:9411"      # Zipkin compatible endpoint
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - jaeger-data:/badger
    networks:
      - podcast-kg-network
    labels:
      - "prometheus.io/scrape=true"
      - "prometheus.io/port=14269"
      - "prometheus.io/path=/metrics"

  # Jaeger Query service for production deployments
  jaeger-query:
    image: jaegertracing/jaeger-query:1.51
    container_name: podcast-kg-jaeger-query
    restart: unless-stopped
    ports:
      - "16687:16686"  # Alternative UI port
    environment:
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
      - QUERY_BASE_PATH=/jaeger
    volumes:
      - jaeger-data:/badger:ro
    networks:
      - podcast-kg-network
    depends_on:
      - jaeger
    profiles:
      - production

  # Jaeger Collector for production deployments
  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.51
    container_name: podcast-kg-jaeger-collector
    restart: unless-stopped
    ports:
      - "14269:14269"  # Admin port
      - "14267:14267"  # TChannel
    environment:
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - jaeger-data:/badger
    networks:
      - podcast-kg-network
    profiles:
      - production

  # Jaeger Agent for production deployments
  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.51
    container_name: podcast-kg-jaeger-agent
    restart: unless-stopped
    ports:
      - "6833:6831/udp"  # Alternative agent port
    environment:
      - REPORTER_GRPC_HOST_PORT=jaeger-collector:14250
    networks:
      - podcast-kg-network
    depends_on:
      - jaeger-collector
    profiles:
      - production

volumes:
  jaeger-data:
    driver: local

networks:
  podcast-kg-network:
    external: true