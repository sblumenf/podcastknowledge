apiVersion: v1
kind: Service
metadata:
  name: neo4j
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: podcast-kg-pipeline
spec:
  ports:
    - port: 7474
      targetPort: 7474
      name: http
    - port: 7687
      targetPort: 7687
      name: bolt
  selector:
    app: neo4j
  type: ClusterIP

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neo4j
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: neo4j
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: podcast-kg-pipeline
spec:
  serviceName: neo4j
  replicas: 1
  selector:
    matchLabels:
      app: neo4j
  template:
    metadata:
      labels:
        app: neo4j
    spec:
      containers:
      - name: neo4j
        image: neo4j:5.12.0-enterprise
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 7474
          name: http
        - containerPort: 7687
          name: bolt
        env:
        - name: NEO4J_AUTH
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: NEO4J_PASSWORD
        - name: NEO4J_ACCEPT_LICENSE_AGREEMENT
          value: "yes"
        - name: NEO4J_PLUGINS
          value: '["apoc", "graph-data-science"]'
        - name: NEO4J_dbms_memory_heap_initial__size
          value: "4G"
        - name: NEO4J_dbms_memory_heap_max__size
          value: "8G"
        - name: NEO4J_dbms_memory_pagecache_size
          value: "4G"
        - name: NEO4J_dbms_default__listen__address
          value: "0.0.0.0"
        - name: NEO4J_dbms_security_procedures_unrestricted
          value: "apoc.*,gds.*"
        - name: NEO4J_dbms_security_procedures_allowlist
          value: "apoc.*,gds.*"
        volumeMounts:
        - name: data
          mountPath: /data
        - name: logs
          mountPath: /logs
        - name: import
          mountPath: /import
        - name: plugins
          mountPath: /plugins
        resources:
          requests:
            memory: "12Gi"
            cpu: "2"
          limits:
            memory: "16Gi"
            cpu: "4"
        livenessProbe:
          exec:
            command:
            - neo4j
            - status
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - neo4j
            - status
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 5
          failureThreshold: 3
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: neo4j
        app.kubernetes.io/component: database
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd
      resources:
        requests:
          storage: 100Gi
  - metadata:
      name: logs
      labels:
        app.kubernetes.io/name: neo4j
        app.kubernetes.io/component: database
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: import
      labels:
        app.kubernetes.io/name: neo4j
        app.kubernetes.io/component: database
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: plugins
      labels:
        app.kubernetes.io/name: neo4j
        app.kubernetes.io/component: database
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 1Gi