---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: podcast-kg
  labels:
    app: jaeger
    component: collector
spec:
  type: ClusterIP
  ports:
    - name: jaeger-collector-tchannel
      port: 14267
      protocol: TCP
      targetPort: 14267
    - name: jaeger-collector-http
      port: 14268
      protocol: TCP
      targetPort: 14268
    - name: jaeger-collector-grpc
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: zipkin
      port: 9411
      protocol: TCP
      targetPort: 9411
  selector:
    app: jaeger
    component: collector
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-query
  namespace: podcast-kg
  labels:
    app: jaeger
    component: query
spec:
  type: ClusterIP
  ports:
    - name: jaeger-query-http
      port: 16686
      protocol: TCP
      targetPort: 16686
  selector:
    app: jaeger
    component: query
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-agent
  namespace: podcast-kg
  labels:
    app: jaeger
    component: agent
spec:
  type: ClusterIP
  clusterIP: None  # Headless service
  ports:
    - name: agent-zipkin-thrift
      port: 5775
      protocol: UDP
      targetPort: 5775
    - name: agent-compact
      port: 6831
      protocol: UDP
      targetPort: 6831
    - name: agent-binary
      port: 6832
      protocol: UDP
      targetPort: 6832
    - name: agent-configs
      port: 5778
      protocol: TCP
      targetPort: 5778
  selector:
    app: jaeger
    component: agent
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jaeger
  namespace: podcast-kg
  labels:
    app: jaeger
spec:
  serviceName: jaeger
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      component: all-in-one
  template:
    metadata:
      labels:
        app: jaeger
        component: all-in-one
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "14269"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: jaeger
        image: jaegertracing/all-in-one:1.51
        env:
        - name: COLLECTOR_ZIPKIN_HOST_PORT
          value: ":9411"
        - name: COLLECTOR_OTLP_ENABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          value: badger
        - name: BADGER_EPHEMERAL
          value: "false"
        - name: BADGER_DIRECTORY_VALUE
          value: /badger/data
        - name: BADGER_DIRECTORY_KEY
          value: /badger/key
        ports:
        - containerPort: 5775
          protocol: UDP
          name: zipkin-thrift
        - containerPort: 6831
          protocol: UDP
          name: jaeger-thrift
        - containerPort: 6832
          protocol: UDP
          name: jaeger-binary
        - containerPort: 5778
          protocol: TCP
          name: config-http
        - containerPort: 16686
          protocol: TCP
          name: query-http
        - containerPort: 14268
          protocol: TCP
          name: collector-http
        - containerPort: 14250
          protocol: TCP
          name: collector-grpc
        - containerPort: 9411
          protocol: TCP
          name: zipkin
        - containerPort: 14269
          protocol: TCP
          name: admin-http
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: badger-storage
          mountPath: /badger
        readinessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: 14269
          initialDelaySeconds: 15
          periodSeconds: 30
  volumeClaimTemplates:
  - metadata:
      name: badger-storage
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: standard
      resources:
        requests:
          storage: 10Gi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: jaeger-agent
  namespace: podcast-kg
  labels:
    app: jaeger
    component: agent
spec:
  selector:
    matchLabels:
      app: jaeger
      component: agent
  template:
    metadata:
      labels:
        app: jaeger
        component: agent
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: jaeger-agent
        image: jaegertracing/jaeger-agent:1.51
        args:
        - "--reporter.grpc.host-port=jaeger-collector:14250"
        - "--reporter.type=grpc"
        ports:
        - containerPort: 5775
          protocol: UDP
          hostPort: 5775
        - containerPort: 6831
          protocol: UDP
          hostPort: 6831
        - containerPort: 6832
          protocol: UDP
          hostPort: 6832
        - containerPort: 5778
          protocol: TCP
          hostPort: 5778
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jaeger-ui
  namespace: podcast-kg
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: jaeger.podcast-kg.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: jaeger-query
            port:
              number: 16686
---
# ServiceMonitor for Prometheus scraping
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: jaeger
  namespace: podcast-kg
  labels:
    app: jaeger
spec:
  selector:
    matchLabels:
      app: jaeger
  endpoints:
  - port: admin-http
    path: /metrics
    interval: 30s