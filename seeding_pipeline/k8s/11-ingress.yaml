apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: podcast-kg-ingress
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline
    app.kubernetes.io/component: ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/proxy-body-size: "100m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
spec:
  tls:
  - hosts:
    - api.podcast-kg.example.com
    secretName: podcast-kg-tls
  rules:
  - host: api.podcast-kg.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: podcast-kg-api
            port:
              number: 8000

---
# Ingress for monitoring (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: podcast-kg-monitoring-ingress
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline
    app.kubernetes.io/component: monitoring-ingress
  annotations:
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
spec:
  tls:
  - hosts:
    - metrics.podcast-kg.example.com
    secretName: podcast-kg-monitoring-tls
  rules:
  - host: metrics.podcast-kg.example.com
    http:
      paths:
      - path: /metrics
        pathType: Prefix
        backend:
          service:
            name: podcast-kg-api
            port:
              number: 9090