apiVersion: v1
kind: Service
metadata:
  name: podcast-kg-api
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline
    app.kubernetes.io/component: api
spec:
  ports:
    - port: 8000
      targetPort: 8000
      name: http
    - port: 9090
      targetPort: 9090
      name: metrics
  selector:
    app: podcast-kg-pipeline
  type: ClusterIP

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: podcast-kg-pipeline
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline
    app.kubernetes.io/component: application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: podcast-kg-pipeline
  template:
    metadata:
      labels:
        app: podcast-kg-pipeline
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: podcast-kg-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: podcast-kg
        image: your-registry/podcast-kg-pipeline:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        - containerPort: 9090
          name: metrics
        env:
        # Neo4j configuration
        - name: NEO4J_URI
          value: "bolt://neo4j:7687"
        - name: NEO4J_USER
          value: "neo4j"
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: NEO4J_PASSWORD
        # Redis configuration
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: REDIS_PASSWORD
        # API keys
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: GOOGLE_API_KEY
        # Application settings
        - name: PODCAST_KG_LOG_LEVEL
          value: "INFO"
        - name: PODCAST_KG_ENV
          value: "production"
        - name: PODCAST_KG_WORKERS
          value: "4"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/cache
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
            # Uncomment for GPU support
            # nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4"
            # Uncomment for GPU support
            # nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 15"]
      initContainers:
      - name: wait-for-neo4j
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z neo4j 7687; do echo waiting for neo4j; sleep 2; done;']
      - name: wait-for-redis
        image: busybox:latest
        command: ['sh', '-c', 'until nc -z redis 6379; do echo waiting for redis; sleep 2; done;']
      volumes:
      - name: config
        configMap:
          name: podcast-kg-config
      - name: data
        persistentVolumeClaim:
          claimName: podcast-kg-data
      - name: logs
        persistentVolumeClaim:
          claimName: podcast-kg-logs
      - name: cache
        persistentVolumeClaim:
          claimName: podcast-kg-cache
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - podcast-kg-pipeline
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: podcast-kg-sa
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline