# Example Job for seeding podcasts
apiVersion: batch/v1
kind: Job
metadata:
  name: podcast-seeding-job
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline
    app.kubernetes.io/component: batch-job
spec:
  ttlSecondsAfterFinished: 86400  # Clean up after 24 hours
  template:
    metadata:
      labels:
        app: podcast-kg-job
    spec:
      restartPolicy: OnFailure
      serviceAccountName: podcast-kg-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: seeder
        image: your-registry/podcast-kg-pipeline:latest
        imagePullPolicy: Always
        command:
        - python
        - -m
        - cli
        - seed-podcasts
        - --config
        - /app/config/config.yml
        - --podcasts-file
        - /app/config/podcasts.json
        env:
        # Neo4j configuration
        - name: NEO4J_URI
          value: "bolt://neo4j:7687"
        - name: NEO4J_USER
          value: "neo4j"
        - name: NEO4J_PASSWORD
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: NEO4J_PASSWORD
        # Redis configuration
        - name: REDIS_URL
          value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: REDIS_PASSWORD
        # API keys
        - name: GOOGLE_API_KEY
          valueFrom:
            secretKeyRef:
              name: podcast-kg-secrets
              key: GOOGLE_API_KEY
        # Job settings
        - name: PODCAST_KG_LOG_LEVEL
          value: "INFO"
        - name: PODCAST_KG_BATCH_SIZE
          value: "5"
        - name: PODCAST_KG_MAX_WORKERS
          value: "4"
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        - name: data
          mountPath: /app/data
        - name: logs
          mountPath: /app/logs
        - name: cache
          mountPath: /app/cache
        resources:
          requests:
            memory: "4Gi"
            cpu: "2"
            # Uncomment for GPU support
            # nvidia.com/gpu: 1
          limits:
            memory: "8Gi"
            cpu: "4"
            # Uncomment for GPU support
            # nvidia.com/gpu: 1
      initContainers:
      - name: wait-for-services
        image: busybox:latest
        command: 
        - sh
        - -c
        - |
          echo "Waiting for Neo4j..."
          until nc -z neo4j 7687; do sleep 2; done
          echo "Waiting for Redis..."
          until nc -z redis 6379; do sleep 2; done
          echo "All services ready!"
      volumes:
      - name: config
        configMap:
          name: podcast-kg-config
          items:
          - key: config.yml
            path: config.yml
          - key: podcasts.json
            path: podcasts.json
      - name: data
        persistentVolumeClaim:
          claimName: podcast-kg-data
      - name: logs
        persistentVolumeClaim:
          claimName: podcast-kg-logs
      - name: cache
        persistentVolumeClaim:
          claimName: podcast-kg-cache
  backoffLimit: 3
  activeDeadlineSeconds: 86400  # 24 hour timeout

---
# CronJob for scheduled podcast updates
apiVersion: batch/v1
kind: CronJob
metadata:
  name: podcast-update-cronjob
  namespace: podcast-kg
  labels:
    app.kubernetes.io/name: podcast-kg-pipeline
    app.kubernetes.io/component: scheduled-job
spec:
  schedule: "0 2 * * *"  # Run at 2 AM daily
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: podcast-kg-cronjob
        spec:
          restartPolicy: OnFailure
          serviceAccountName: podcast-kg-sa
          containers:
          - name: updater
            image: your-registry/podcast-kg-pipeline:latest
            imagePullPolicy: Always
            command:
            - python
            - -m
            - cli
            - update-podcasts
            - --config
            - /app/config/config.yml
            - --incremental
            env:
            - name: NEO4J_URI
              value: "bolt://neo4j:7687"
            - name: NEO4J_USER
              value: "neo4j"
            - name: NEO4J_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: podcast-kg-secrets
                  key: NEO4J_PASSWORD
            - name: REDIS_URL
              value: "redis://:$(REDIS_PASSWORD)@redis:6379/0"
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: podcast-kg-secrets
                  key: REDIS_PASSWORD
            - name: GOOGLE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: podcast-kg-secrets
                  key: GOOGLE_API_KEY
            volumeMounts:
            - name: config
              mountPath: /app/config
              readOnly: true
            - name: data
              mountPath: /app/data
            - name: logs
              mountPath: /app/logs
            - name: cache
              mountPath: /app/cache
            resources:
              requests:
                memory: "2Gi"
                cpu: "1"
              limits:
                memory: "4Gi"
                cpu: "2"
          volumes:
          - name: config
            configMap:
              name: podcast-kg-config
          - name: data
            persistentVolumeClaim:
              claimName: podcast-kg-data
          - name: logs
            persistentVolumeClaim:
              claimName: podcast-kg-logs
          - name: cache
            persistentVolumeClaim:
              claimName: podcast-kg-cache
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3